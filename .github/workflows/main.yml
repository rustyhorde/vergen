on: [push]

name: CI

jobs:
  test:
    name: vergen
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          rust: stable
          other: i686-unknown-linux-gnu
        - os: ubuntu-latest
          rust: beta
          other: i686-unknown-linux-gnu
        - os: ubuntu-latest
          rust: nightly
          other: i686-unknown-linux-gnu
        - os: macos-latest
          rust: stable
          other: x86_64-apple-ios
        - os: macos-latest
          rust: beta
          other: x86_64-apple-ios
        - os: macos-latest
          rust: nightly
          other: x86_64-apple-ios
        - os: windows-latest
          rust: stable-msvc
          other: i686-pc-windows-msvc
        - os: windows-latest
          rust: beta-msvc
          other: i686-pc-windows-msvc
        - os: windows-latest
          rust: nightly-msvc
          other: i686-pc-windows-msvc
        - os: windows-latest
          rust: stable-gnu
          other: i686-pc-windows-gnu
        - os: windows-latest
          rust: beta-gnu
          other: i686-pc-windows-gnu
        - os: windows-latest
          rust: nightly-gnu
          other: i686-pc-windows-gnu
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install 'cargo-tarpaulin'
        uses: actions-rs/install@v0.1
        if: matrix.os == 'ubuntu-latest'
        with:
          crate: cargo-tarpaulin
          version: latest
          use-tool-cache: true
      - run: cd testdata/notagsrepo && git checkout master && cd ..
      - run: cd testdata/tagsrepo && git checkout master && cd ..
      - run: git submodule foreach --recursive 'git fetch --tags'
      - run: rustup update --no-self-update ${{ matrix.rust }} && rustup default ${{ matrix.rust }}
      - run: rustup component add rustfmt || echo "rustfmt not available"
      - run: cargo test
      - run: cargo test --no-default-features
      - name: Run 'cargo tarpaulin'
        if: matrix.os == 'ubuntu-latest'
        run: cargo tarpaulin --coveralls ${{ github.token }}