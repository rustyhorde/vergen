on:
  # Trigger the workflow on push to master or any pull request
  # Ignore all tags
  push:
    branches:
      - master
    tags-ignore: "*"
  pull_request:
    branches:
      - "*"
    tags-ignore: "*"
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: "13 3 * * *"

name: CI

jobs:
  rustfmt:
    name: ☢️ Formatting ☢️
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: ☢️ Rustfmt Check ☢️
        run: cargo fmt --all -- --check
  lints-linux:
    name: 🕳️ Lints Linux 🕳️
    needs: rustfmt
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            rust: "1.62.0"
          - os: ubuntu-latest
            rust: stable
          - os: ubuntu-latest
            rust: beta
          - os: ubuntu-latest
            rust: nightly
    steps:
      - uses: actions/checkout@v3
      - name: 🧰 Toolchain 🧰
        run: |
          rustup toolchain remove ${{ matrix.rust }}
          rm -f ~/.cargo/bin/rustfmt
          rm -f ~/.cargo/bin/cargo-fmt
          rm -f ~/.cargo/bin/cargo-clippy
          rustup toolchain install ${{ matrix.rust }} --profile default
          rustup default ${{ matrix.rust }}
      - name: ✂ Clippy ✂
        run: |
          cargo clippy --all-targets --features build,cargo,git,gitcl,rustc,si -- -Dwarnings
          cargo clippy --all-targets --features build,cargo,git,git2,rustc,si -- -Dwarnings
          cargo clippy --all-targets --features build,cargo,git,git2,rustc,si -- -Dwarnings
  lints-macos:
    name: 🕳️ Lints MacOS 🕳️
    needs: rustfmt
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            rust: "1.62.0"
          - os: macos-latest
            rust: stable
          - os: macos-latest
            rust: beta
          - os: macos-latest
            rust: nightly
    steps:
      - uses: actions/checkout@v3
      - name: 🧰 Toolchain 🧰
        run: |
          rustup toolchain remove ${{ matrix.rust }}
          rustup toolchain install ${{ matrix.rust }} --profile default
          rustup default ${{ matrix.rust }}
      - name: ✂ Clippy ✂
        run: |
          cargo clippy --all-targets --features build,cargo,git,gitcl,rustc,si -- -Dwarnings
          cargo clippy --all-targets --features build,cargo,git,git2,rustc,si -- -Dwarnings
          cargo clippy --all-targets --features build,cargo,git,git2,rustc,si -- -Dwarnings
  lints-windows:
    name: 🕳️ Lints Windows 🕳️
    needs: rustfmt
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            rust: "1.62.0"
          - os: windows-latest
            rust: stable
          - os: windows-latest
            rust: beta
          - os: windows-latest
            rust: nightly
    steps:
      - uses: actions/checkout@v3
      - name: 🧰 Toolchain 🧰
        run: |
          rustup toolchain remove ${{ matrix.rust }}
          rustup toolchain install ${{ matrix.rust }} --profile default
          rustup default ${{ matrix.rust }}
      - name: ✂ Clippy ✂
        run: |
          cargo clippy --all-targets --features build,cargo,git,gitcl,rustc,si -- -Dwarnings
          cargo clippy --all-targets --features build,cargo,git,git2,rustc,si -- -Dwarnings
          cargo clippy --all-targets --features build,cargo,git,git2,rustc,si -- -Dwarnings
  test-linux:
    name: 🧪 Linux 🧪
    needs: lints-linux
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            rust: "1.62.0"
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            rust: beta
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            rust: nightly
            target: x86_64-unknown-linux-gnu
    steps:
      - name: ✔️ Checkout ✔️
        uses: actions/checkout@v3
      - name: 💵 Cache 💵
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/cargo-binstall
            ~/.cargo/bin/cargo-tarpaulin*
            ~/.cargo/bin/cargo-*-all-features*
          key: ${{ runner.os }}-${{ matrix.rust }}-${{ matrix.target }}-${{ hashFiles('**/Cargo.toml','**/main.yml') }}
      - name: 🧰 Toolchain 🧰
        run: |
          rustup toolchain remove ${{ matrix.rust }}-${{ matrix.target }}
          rustup toolchain add ${{ matrix.rust }}-${{ matrix.target }} --profile minimal
          rustup default ${{ matrix.rust }}
      - name: 💾 Install (cargo-binstall) 💾
        run: |
          rustup override set stable
          cargo binstall -V || cargo install cargo-binstall
          rustup override remove
      - name: 💾 Install (tarpaulin, all-features) 💾
        run: cargo binstall --no-confirm --no-symlinks cargo-tarpaulin cargo-all-features
      - name: 🧪 Test 🧪
        run: cargo test-all-features
      - name: 🧪 Test gitcl 🧪
        run: cargo test -F build,cargo,git,gitcl,rustc,si
      - name: 🧪 Test git2 🧪
        run: cargo test -F build,cargo,git,git2,rustc,si
      - name: 🧪 Test gix 🧪
        run: cargo test -F build,cargo,git,gix,rustc,si
      - name: 🙊 Code Coverage 🙊
        run: cargo tarpaulin --exclude-files src/lib.rs --out Xml
      - name: 🙊 Upload Code Coverage 🙊
        uses: codecov/codecov-action@v3
        with:
          files: ./cobertura.xml
  test-macos:
    name: 🧪 MacOS 🧪
    needs: lints-macos
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            rust: "1.62.0"
            target: x86_64-apple-darwin
          - os: macos-latest
            rust: stable
            target: x86_64-apple-darwin
          - os: macos-latest
            rust: beta
            target: x86_64-apple-darwin
          - os: macos-latest
            rust: nightly
            target: x86_64-apple-darwin
    steps:
      - name: ✔️ Checkout ✔️
        uses: actions/checkout@v3
      - name: 💵 Cache 💵
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/cargo-binstall
            ~/.cargo/bin/cargo-*-all-features*
          key: ${{ runner.os }}-${{ matrix.rust }}-${{ matrix.target }}-${{ hashFiles('**/Cargo.toml','**/main.yml') }}
      - name: 🧰 Toolchain 🧰
        run: |
          rustup toolchain remove ${{ matrix.rust }}-${{ matrix.target }}
          rustup toolchain add ${{ matrix.rust }}-${{ matrix.target }} --profile minimal
          rustup default ${{ matrix.rust }}
      - name: 💾 Install (cargo-binstall) 💾
        run: |
          rustup override set stable
          cargo binstall -V || cargo install cargo-binstall
          rustup override remove
      - name: 💾 Install (tarpaulin, all-features) 💾
        run: cargo binstall --no-confirm --no-symlinks cargo-all-features
      - name: 🧪 Test 🧪
        run: cargo test-all-features
      - name: 🧪 Test gitcl 🧪
        run: cargo test -F build,cargo,git,gitcl,rustc,si
      - name: 🧪 Test git2 🧪
        run: cargo test -F build,cargo,git,git2,rustc,si
      - name: 🧪 Test gix 🧪
        run: cargo test -F build,cargo,git,gix,rustc,si
  test-windows:
    name: 🧪 Windows 🧪
    needs: lints-windows
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            rust: "1.62.0"
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            rust: stable
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            rust: beta
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            rust: nightly
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            rust: "1.62.0"
            target: x86_64-pc-windows-gnu
          - os: windows-latest
            rust: stable
            target: x86_64-pc-windows-gnu
          - os: windows-latest
            rust: beta
            target: x86_64-pc-windows-gnu
          - os: windows-latest
            rust: nightly
            target: x86_64-pc-windows-gnu
    steps:
      - name: ✔️ Checkout ✔️
        uses: actions/checkout@v3
      - name: 💵 Cache 💵
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/cargo-binstall
            ~/.cargo/bin/cargo-*-all-features*
          key: ${{ runner.os }}-${{ matrix.rust }}-${{ matrix.target }}-${{ hashFiles('**/Cargo.toml','**/main.yml') }}
      - name: 🧰 Toolchain 🧰
        run: |
          rustup toolchain remove ${{ matrix.rust }}-${{ matrix.target }}
          rustup toolchain add ${{ matrix.rust }}-${{ matrix.target }} --profile minimal
          rustup default ${{ matrix.rust }}
      - name: 💾 Install (cargo-binstall) 💾
        run: |
          rustup override set stable
          cargo binstall -V || cargo install cargo-binstall
          rustup override remove
      - name: 💾 Install (all-features) 💾
        run: cargo binstall --no-confirm --no-symlinks cargo-all-features
      - name: 🧪 Test 🧪
        run: cargo test-all-features
      - name: 🧪 Test gitcl 🧪
        run: cargo test -F build,cargo,git,gitcl,rustc,si
      - name: 🧪 Test git2 🧪
        run: cargo test -F build,cargo,git,git2,rustc,si
      - name: 🧪 Test gix 🧪
        run: cargo test -F build,cargo,git,gix,rustc,si
