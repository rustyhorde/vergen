on: [push]

name: CI

jobs:
  test:
    name: vergen
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          rust: stable
          other: i686-unknown-linux-gnu
        - os: ubuntu-latest
          rust: beta
          other: i686-unknown-linux-gnu
        - os: ubuntu-latest
          rust: nightly
          other: i686-unknown-linux-gnu
        - os: macos-latest
          rust: stable
          other: x86_64-apple-ios
        - os: macos-latest
          rust: beta
          other: x86_64-apple-ios
        - os: macos-latest
          rust: nightly
          other: x86_64-apple-ios
        - os: windows-latest
          rust: stable-msvc
          other: i686-pc-windows-msvc
        - os: windows-latest
          rust: beta-msvc
          other: i686-pc-windows-msvc
        - os: windows-latest
          rust: nightly-msvc
          other: i686-pc-windows-msvc
        - os: windows-latest
          rust: stable-gnu
          other: i686-pc-windows-gnu
        - os: windows-latest
          rust: beta-gnu
          other: i686-pc-windows-gnu
        - os: windows-latest
          rust: nightly-gnu
          other: i686-pc-windows-gnu
    steps:
      - name: ✔️ Checkout ✔️
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: 💵 Cache 💵
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/cargo-tarpaulin*
            ~/.cargo/bin/cargo-*-all-features*
          key: ${{ runner.os }}-${{ matrix.rust }}-${{ hashFiles('**/Cargo.toml') }}
      - name: ✔️ Checkout (notagsrepo master) ✔️
        run: cd testdata/notagsrepo && git checkout master && cd ..
      - name: ✔️ Checkout (tagsrepo master) ✔️
        run: cd testdata/tagsrepo && git checkout master && cd ..
      - name: ✔️ Checkout (detachedhead v0.0.1) ✔️
        run: cd testdata/detachedhead && git checkout v0.0.1 && cd ..
      - name: 🐕 Fetch 🐕
        run: git submodule foreach --recursive 'git fetch --tags'
      - name: 💾 Install (cargo-tarpaulin) 💾
        uses: actions-rs/install@v0.1
        if: matrix.os == 'ubuntu-latest'
        with:
          crate: cargo-tarpaulin
          version: latest
          use-tool-cache: true
        continue-on-error: true
      - name: 💾 Install (cargo-all-features) 💾
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-all-features
          version: latest
          use-tool-cache: true
        continue-on-error: true
      - name: 📅 Update 📅
        run: rustup update --no-self-update ${{ matrix.rust }} && rustup default ${{ matrix.rust }}
      - name: ➕ Add ➕
        run: rustup component add rustfmt || echo "rustfmt not available"
      - name: ➕ Add ➕
        run: rustup component add clippy || echo "clippy not available"
      - name: ☢️ Formatting ☢️
        run: cargo fmt --all -- --check
      - name: 🕳️ Lints 🕳️
        run: cargo clippy --all -- -D warnings
      - name: 🏗️ Build 🏗️
        run: cargo build-all-features
      - name: 🧪 Test 🧪
        run: cargo test-all-features
      - name: 🙊 Code Coverage 🙊
        if: matrix.os == 'ubuntu-latest'
        run: cargo tarpaulin --out Xml
      - name: 🙊 Upload Code Coverage 🙊
        uses: codecov/codecov-action@v1
        if: matrix.os == 'ubuntu-latest'
        with:
          files: ./cobertura.xml